@model IPagedList<lab4Final.Models.Prestamo>
@using X.PagedList.Mvc.Core
@using X.PagedList

@{
    ViewData["Title"] = "Index";
}

<h1 class="text-center my-4">Lista de Préstamos</h1>

<form asp-controller="Prestamo" asp-action="Index" class="d-flex align-items-center mb-3">
    <input type="text" name="buscarPrestamo" id="buscarPrestamo" class="form-control form-control-sm me-2" placeholder="Buscar por nombre del socio o título del libro" oninput="filterPrestamos()" />
</form>

@if (User.IsInRole("Admin"))
{
    <p class="text-center">
        <a asp-action="Create" class="btn btn-success">Crear Préstamo</a>
    </p>
}

<table class="table table-striped table-bordered" id="prestamoTable">
    <thead class="table-light">
        <tr>
            <th>@Html.DisplayNameFor(model => model.First().ImagenLibro)</th>
            <th>@Html.DisplayNameFor(model => model.First().Libro)</th>
            <th>@Html.DisplayNameFor(model => model.First().Socio)</th>
            <th>@Html.DisplayNameFor(model => model.First().FechaPrestamo)</th>
            <th>@Html.DisplayNameFor(model => model.First().FechaDevolucion)</th>
            <th>Acciones</th>
        </tr>
    </thead>
    <tbody>
        @foreach (var item in Model)
        {
            <tr>
                <td class="text-center">
                    <img src="/images/@item.ImagenLibro" class="img-fluid" style="max-width: 100px; height: auto; object-fit: contain;" />
                </td>
                <td class="libro">@Html.DisplayFor(modelItem => item.Libro.Titulo)</td>
                <td class="socio">@($"{item.Socio.Nombre} {item.Socio.Apellido}")</td>
                <td>@item.FechaPrestamo.ToString("dd/MM/yyyy")</td>
                <td>@(item.FechaDevolucion?.ToString("dd/MM/yyyy"))</td>
                
                    <td>
                    @if (User.IsInRole("Admin"))
                    {
                        <a asp-action="Edit" asp-route-id="@item.Id" class="btn btn-warning btn-sm">Editar</a>
                        <a asp-action="Delete" asp-route-id="@item.Id" class="btn btn-danger btn-sm">Eliminar</a>
                    }
                    <a asp-action="Details" asp-route-id="@item.Id" class="btn btn-info btn-sm">Detalles</a>
                    </td>
            </tr>
        }
    </tbody>
</table>

<div class="pagination-container mt-4">
    @Html.PagedListPager(Model, page => Url.Action("Index", new { page }), new PagedListRenderOptions
{
    UlElementClasses = new[] { "pagination", "justify-content-center" },
    LiElementClasses = new[] { "page-item" },
    PageClasses = new[] { "page-link" },
    ActiveLiElementClass = "active",
    Display = PagedListDisplayMode.Always
})
</div>

<script>
    function filterPrestamos() {
        const input = document.getElementById('buscarPrestamo');
        const filter = input.value.toLowerCase();
        const table = document.getElementById('prestamoTable');
        const rows = table.getElementsByTagName('tr');

        for (let i = 1; i < rows.length; i++) {
            const libroCell = rows[i].getElementsByClassName('libro')[0];
            const socioCell = rows[i].getElementsByClassName('socio')[0];
            const libroText = libroCell.textContent || libroCell.innerText;
            const socioText = socioCell.textContent || socioCell.innerText;

            if (libroText.toLowerCase().indexOf(filter) > -1 || socioText.toLowerCase().indexOf(filter) > -1) {
                rows[i].style.display = '';
            } else {
                rows[i].style.display = 'none';
            }
        }
    }
</script>